#lang marv

# All Marv specifications start with the line '#lang marv' - this is what tells
# Racket to look for the marv DSL.

# Importing another marv module set. The modules that are imported will be
# prefixed with 'net:' 

import "shared/network-base.mrv" as net

# The top-level module file (the one you'll specify on the command-line) must
# include a 'main' module. The main module's parameters will be passed on the
# command-line via the '--param name xyz' flags.

module main(name = "example-01-networking") {

    # defaults is a CONFIG-OBJECT, which is basically a set of <attr> = <value>
    # pairs. CONFIG-OBJECTs are the building blocks for declaring resources, 
    # which we'll get to in the 'network-base.mrv' module set.

    defaults = {
        # env is a built-in function to read environment variables
        project = env("MARV_GCP_PROJECT")
        region = env("MARV_GCP_REGION")
    }

    # Call the imported module to create the resources that it contains
    # Parameters are passed as named pairs (x=y) and can be optionally separated
    # by commas.

    network = net:network-base(defaults = defaults, name = name, primary-cidr="10.0.1.0/24")

    # The network-base module returns values that can be referenced:
    # e.g. network.vpc
    #  and network.primary-subnet
}
