#lang marv

import types/gcp/storage as gcp
import types/gcp/base

import types/marv/base
import types/marv/enhancers

type label-project = {
    identity(cfg) = cfg <- { labels = cfg.labels <- { project = cfg.project, cost-ctr = "abc"  }}

#   identity(cfg) = cfg <- { labels = cfg.labels | {}  <- { project = cfg.project }}
#   identity(cfg) = cfg <- { labels = get(cfg,labels,{}) <- { project = cfg.project }}
#   identity(cfg) = set(cfg, labels, get(cfg,labels,{}) <- { project = cfg.project })
#   identity(cfg) = merge(cfg, labels, { project=cfg.project })

    * = lifecycle.*
}

type bucket = E2<gcp:bucket, default-resource, label-project>

module main {

    my-bucket = bucket {
        name = strf("~a-mybucket" default-resource.project())
        # storageClass = "NEARLINE"
    }
    
}
