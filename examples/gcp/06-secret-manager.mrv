#lang marv

# TODO23 - should this be an imported module from a common (shared) pool?

secret-parent(config) = config <- {
    parent = strf("projects/~a" config.project)
}

type gcp:secretmanager.project.secret = {
   create = secretmanager.projects.secrets.create { secret-parent identity }
   read = secretmanager.projects.secrets.get { identity identity }
   update = secretmanager.projects.secrets.patch { identity identity }
   delete = secretmanager.projects.secrets.delete { identity identity }
}

create-transform(config) = { 
    parent = config.secret
    payload = { data = base64encode(config.secret-data) }
}

read-transform(config) = {
    name = strf("~a/versions/latest" config.secret)
}

read-reply-transform(config) = {
    secret-data = base64decode(config.payload.data)
}

identity(config)  = config

type gcp:secretmanager.project.secret.version = {
    create = secretmanager.projects.secrets.addVersion { create-transform identity }
    read = secretmanager.projects.secrets.versions.access { read-transform read-reply-transform }
    update = secretmanager.projects.secrets.addVersion { create-transform identity }
    delete = secretmanager.projects.secrets.versions.destroy { identity identity }
}

module main(name = "example-06-secret-manager") {

    defaults = {
        project = env("MARV_GCP_PROJECT")
        region = env("MARV_GCP_REGION")
    }

    secret = gcp:secretmanager.project.secret defaults <- {
        secretId = "my-little-secret"
        replication = {
            automatic = {}
        }
    }

    secret-version = gcp:secretmanager.project.secret.version defaults <- {
        secret = imm: secret.name
        secret-data = "super-secret1"
    }
}
