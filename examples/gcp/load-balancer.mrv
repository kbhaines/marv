#lang marv #/alpha/parse-only

defaults = {
  project = env("MARV_GCP_PROJECT")
  region = env("MARV_GCP_REGION")
}

vpc = gcp:compute.network defaults <- {
     name = imm:"vpc2"
     description = "vpc2"
     autoCreateSubnetworks = false
     routingConfig = { routingMode = "REGIONAL" }
}

base-subnet = defaults <- {
  network = imm: vpc.selfLink
}

sn1 = gcp:compute.subnetwork base-subnet <- {
     name = "subnet1"
     description = "primary subnet"
     ipCidrRange =  imm: "10.0.1.0/24"
}

proxy-sn = gcp:compute.subnetwork base-subnet <- {
     name = "proxy-only-subnet"
     description = "subnet for proxy"
     ipCidrRange = imm: "10.0.3.0/24"

     purpose = "REGIONAL_MANAGED_PROXY"
     role = "ACTIVE"
}

fw-health-check = gcp:compute.firewall defaults <- {
     name = "fw-allow-health-check"
     network = imm: vpc.selfLink
     sourceRanges = [ "130.211.0.0/22" "35.191.0.0/16" ]
     targetTags =  [ "load-balanced-backend" ]
     allowed = [ { IPProtocol = "tcp" } ]
     direction = "INGRESS"
}

fw-proxies = gcp:compute.firewall defaults <- {
     name = "fw-allow-proxies"
     network = imm: vpc.selfLink
     sourceRanges = proxy-sn.ipCidrRange
     targetTags =  [ "load-balanced-backend" ]
     allowed = [ { IPProtocol = "tcp" ports = [ "80" ] }
                 { IPProtocol = "tcp" ports = [ "443" ] }
                 { IPProtocol = "tcp" ports = [ "8080" ] } ]
     direction = "INGRESS"
}
