#lang marv

# Custom types
# 
# Background: Marv doesn't support the entire API surface; e.g. some parts of
# GCP API don't map nicely onto a standard CRUD lifecycle, for example the
# ability to manually add instances to an instanceGroupManager - it's in the API
# but needs custom coding.
# 
# Marv allows you to specify custom resource types using any of the available
# API.

# Ideally we'd return the custom type from this module, so it can be linked to
# resources, but for now you have to consider drivers and their custom types as
# global things. This also means that the type has to be available at all times
# - if you want to delete a custom resource, the type has to be registered.

# This example uses the 'compute.instanceGroupManagers.createInstances' and
# 'compute.instanceGroupManagers.deleteInstances' API calls:
#
# https://www.googleapis.com/discovery/v1/apis/compute/beta/rest
#


module igm-custom {

    # These are the transformers that will reformat the resource to fit the API.

    # spec '<<' [attr ...] yields a config that has only the listed attributes
    # taken from 'spec'

    create-transform(spec) = spec << [ name project zone instanceGroupManager ] <- { 
                instances = [ spec << [ name preservedState ] ]
    }

    delete-transform(spec) = spec << [ name project zone instanceGroupManager ] <- {
        instances = [ strf("zones/~a/instances/~a" spec.zone spec.name) ]
    }

    # Register the custom type. The example uses the name
    # 'compute.my-custom-type.instance' as the custom type ID, but it could be
    # anything prefixed with 'compute.'
    
    # Remember that the custom type is global; once this module has been invoked
    # the type will be available everywhere (but it must be invoked before the
    # custom type can be used).
    
    type gcp:compute.my-custom-type.instance = {
        # The format is <method> = <api-id>:<transformer-func>. 
        # <method> = create or delete
        
        # The <api-id> is the ID of the actual API in the GCP API that
        # the custom type will invoke:

        create = compute.instanceGroupManagers.createInstances:create-transform
        delete = compute.instanceGroupManagers.deleteInstances:delete-transform
    }

    
}