#lang marv

import types/gcp/_auto/iam as _auto

type _state = {
    state(cfg) = cfg.response <- { name=cfg.original.name }
}

sa_name(cfg)=cfg <- { name=expandvars("projects/{project}/serviceAccounts/{email}" cfg)}

#name(cfg)=expandvars("projects/{project}/serviceAccounts/{email}" cfg)

type _sa_base = {
  create(cfg) = cfg <- { accountId=cfg.name name=expandvars("projects/{project}" cfg)}
  read(cfg) = sa_name(cfg)
}

type _sa_after = {
  delete(cfg)=cfg <- { config=cfg.config <- { name=expandvars("projects/{project}/serviceAccounts/{email}" cfg.config)} api=cfg.api } 
}

type serviceAccount =  _sa_base | _auto:serviceAccounts | _state | _sa_after
export serviceAccount


type _sa_key_base = {
  # create(cfg) = sa_name(cfg)
  create(cfg) = cfg <- { name=expandvars("projects/{project}/serviceAccounts/{serviceAccount}" cfg)}
  state(cfg) = cfg.response
}

type serviceAccountKey =  _sa_key_base | _auto:keys
export serviceAccountKey
