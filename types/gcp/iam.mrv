#lang marv

# WARNING: This shim file is incomplete. You need to define an 'API' type
# relevant to the API being imported, and then remove this warning.

import types/gcp/_auto/iam as _auto
import types/marv/marshalls

type MserviceAccount = {
  identity(cfg) = cfg << [ name, project, description, displayName ]
  create(cfg) = cfg <- { 
    name=strf("projects/~a" cfg.project), 
    accountId=cfg.name, 
    serviceAccount={ displayName=cfg.displayName, description=cfg.description }
  }
  post-create(o, state) = state <- { name=o.name, project=o.project }

  read(state) = { name=strf("projects/~a/serviceAccounts/~a" state.project state.email)}
  post-read(o, state)  = post-create(o, state)
  delete(state) = state << [ name ]
}

type serviceAccount=M1<MserviceAccount, _auto:projects_serviceAccounts>
export serviceAccount

type MserviceAccountKey = {
  identity(cfg) = cfg << [ project, serviceAccountEmail ]
  create(cfg) = { name=strf("projects/~a/serviceAccounts/~a" cfg.project, cfg.serviceAccountEmail) }
  post-create(o, state) = state <- { project=o.project }

  read(state) = { name=strf("projects/~a/serviceAccounts/~a" state.project state.email)}
  post-read(o, state)  = post-create(o, state)
  delete(state) = state << [ name ]
}

type serviceAccountKey=M1<MserviceAccountKey, _auto:projects_serviceAccounts_keys>
export serviceAccountKey
