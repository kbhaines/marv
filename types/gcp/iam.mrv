#lang marv

import "../common.mrv"

create-sa-name(cfg) = cfg <- { 
    name = strf("projects/~a" cfg.project)
}

import types/gcp/_auto/iam as _auto

type permission =  _base | _auto:permissions
export permission

type location =  _base | _auto:locations
export location

type iamPolicy =  _base | _auto:iamPolicies
export iamPolicy

type project =  _base | _auto:projects
export project

type role =  _base | _auto:roles
export role

type organization =  _base | _auto:organizations
export organization


type gcp:iam.serviceAccount = {
    create = iam.projects.serviceAccounts.create { create-sa-name identity }
    read = iam.projects.serviceAccounts.get { identity identity }
    update = iam.projects.serviceAccounts.patch { identity identity }
    delete = iam.projects.serviceAccounts.delete { identity identity }
}

create-sa-key-name(cfg) = cfg <- {
    name = cfg.service-account
}

type gcp:iam.serviceAccountKey = {
    create = iam.projects.serviceAccounts.keys.create { create-sa-key-name identity }
    read = iam.projects.serviceAccounts.keys.read { identity identity }
    update = iam.projects.serviceAccounts.keys.patch { identity identity }
    delete = iam.projects.serviceAccounts.keys.delete { identity identity }
}

# TODO25 - debug
type gcp:iam.role = {
    create = iam.role.create { identity identity }
    read = iam.role.get { identity identity }
    update = iam.role.patch { identity identity }
    delete = iam.role.delete { identity identity }
}