#lang marv
## AUTO-GENERATED FILE - DO NOT EDIT!

import types/gcp/_auto/secretmanager-schema
API-ID="secretmanager"
# /resources/projects/resources/secrets
type resources_projects_resources_secrets = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:secretmanager:/resources/projects/resources/secrets"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.Secret(cfg)
   response-type="secretmanager.schemas.Secret"
   method="POST"
   url="https://secretmanager.googleapis.com/v1/{+parent}/secrets"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="secretmanager.schemas.Secret"
   method="GET"
   url="https://secretmanager.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.Secret(cfg)
   response-type="secretmanager.schemas.Secret"
   method="PATCH"
   url="https://secretmanager.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="secretmanager.schemas.Empty"
   method="DELETE"
   url="https://secretmanager.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_secrets

# /resources/projects/resources/locations
type resources_projects_resources_locations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:secretmanager:/resources/projects/resources/locations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="secretmanager.schemas.Location"
   method="GET"
   url="https://secretmanager.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations

# /resources/projects/resources/secrets/resources/versions
type resources_projects_resources_secrets_resources_versions = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:secretmanager:/resources/projects/resources/secrets/resources/versions"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.AddSecretVersionRequest(cfg)
   response-type="secretmanager.schemas.SecretVersion"
   method="POST"
   url="https://secretmanager.googleapis.com/v1/{+parent}:addVersion"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="secretmanager.schemas.AccessSecretVersionResponse"
   method="GET"
   url="https://secretmanager.googleapis.com/v1/{+name}:access"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.AddSecretVersionRequest(cfg)
   response-type="secretmanager.schemas.SecretVersion"
   method="POST"
   url="https://secretmanager.googleapis.com/v1/{+parent}:addVersion"
   required=["(parent)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.DestroySecretVersionRequest(cfg)
   response-type="secretmanager.schemas.SecretVersion"
   method="POST"
   url="https://secretmanager.googleapis.com/v1/{+name}:destroy"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_secrets_resources_versions

