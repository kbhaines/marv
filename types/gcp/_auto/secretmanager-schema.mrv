#lang marv
## AUTO-GENERATED FILE - DO NOT EDIT!


# Schema for EnableSecretVersionRequest
EnableSecretVersionRequest(c)=c << [etag]

# Schema for ReplicaStatus
ReplicaStatus(c)=c << [location customerManagedEncryption]

# Schema for Policy
Policy(c)=c << [auditConfigs version bindings etag]

# Schema for Expr
Expr(c)=c << [title location description expression]

# Schema for SecretVersion
SecretVersion(c)=c << [state replicationStatus destroyTime clientSpecifiedPayloadChecksum etag createTime name]

# Schema for SecretPayload
SecretPayload(c)=c << [data dataCrc32c]

# Schema for AddSecretVersionRequest
AddSecretVersionRequest(c)=c << [payload]

# Schema for Secret
Secret(c)=c << [replication expireTime annotations etag rotation versionAliases topics createTime name ttl labels]

# Schema for ReplicationStatus
ReplicationStatus(c)=c << [userManaged automatic]

# Schema for Topic
Topic(c)=c << [name]

# Schema for Rotation
Rotation(c)=c << [nextRotationTime rotationPeriod]

# Schema for AuditLogConfig
AuditLogConfig(c)=c << [exemptedMembers logType]

# Schema for UserManagedStatus
UserManagedStatus(c)=c << [replicas]

# Schema for Automatic
Automatic(c)=c << [customerManagedEncryption]

# Schema for CustomerManagedEncryptionStatus
CustomerManagedEncryptionStatus(c)=c << [kmsKeyVersionName]

# Schema for Replication
Replication(c)=c << [userManaged automatic]

# Schema for DisableSecretVersionRequest
DisableSecretVersionRequest(c)=c << [etag]

# Schema for TestIamPermissionsRequest
TestIamPermissionsRequest(c)=c << [permissions]

# Schema for TestIamPermissionsResponse
TestIamPermissionsResponse(c)=c << [permissions]

# Schema for Location
Location(c)=c << [locationId displayName name labels metadata]

# Schema for AutomaticStatus
AutomaticStatus(c)=c << [customerManagedEncryption]

# Schema for DestroySecretVersionRequest
DestroySecretVersionRequest(c)=c << [etag]

# Schema for UserManaged
UserManaged(c)=c << [replicas]

# Schema for Empty
Empty(c)=c << []

# Schema for Replica
Replica(c)=c << [location customerManagedEncryption]

# Schema for Binding
Binding(c)=c << [members condition role]

# Schema for AccessSecretVersionResponse
AccessSecretVersionResponse(c)=c << [payload name]

# Schema for CustomerManagedEncryption
CustomerManagedEncryption(c)=c << [kmsKeyName]

# Schema for SetIamPolicyRequest
SetIamPolicyRequest(c)=c << [updateMask policy]

# Schema for ListSecretsResponse
ListSecretsResponse(c)=c << [totalSize secrets nextPageToken]

# Schema for ListLocationsResponse
ListLocationsResponse(c)=c << [locations nextPageToken]

# Schema for AuditConfig
AuditConfig(c)=c << [service auditLogConfigs]

# Schema for ListSecretVersionsResponse
ListSecretVersionsResponse(c)=c << [totalSize versions nextPageToken]
schemas={
  EnableSecretVersionRequest=EnableSecretVersionRequest
  ReplicaStatus=ReplicaStatus
  Policy=Policy
  Expr=Expr
  SecretVersion=SecretVersion
  SecretPayload=SecretPayload
  AddSecretVersionRequest=AddSecretVersionRequest
  Secret=Secret
  ReplicationStatus=ReplicationStatus
  Topic=Topic
  Rotation=Rotation
  AuditLogConfig=AuditLogConfig
  UserManagedStatus=UserManagedStatus
  Automatic=Automatic
  CustomerManagedEncryptionStatus=CustomerManagedEncryptionStatus
  Replication=Replication
  DisableSecretVersionRequest=DisableSecretVersionRequest
  TestIamPermissionsRequest=TestIamPermissionsRequest
  TestIamPermissionsResponse=TestIamPermissionsResponse
  Location=Location
  AutomaticStatus=AutomaticStatus
  DestroySecretVersionRequest=DestroySecretVersionRequest
  UserManaged=UserManaged
  Empty=Empty
  Replica=Replica
  Binding=Binding
  AccessSecretVersionResponse=AccessSecretVersionResponse
  CustomerManagedEncryption=CustomerManagedEncryption
  SetIamPolicyRequest=SetIamPolicyRequest
  ListSecretsResponse=ListSecretsResponse
  ListLocationsResponse=ListLocationsResponse
  AuditConfig=AuditConfig
  ListSecretVersionsResponse=ListSecretVersionsResponse
}
export schemas
