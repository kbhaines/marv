#lang marv
## AUTO-GENERATED FILE - DO NOT EDIT!

import types/gcp/_auto/iam-schema
API-ID="iam"
# /resources/roles
type roles = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export roles

# /resources/iamPolicies
type iamPolicies = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export iamPolicies

# /resources/permissions
type permissions = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export permissions

# /resources/locations/resources/workforcePools
type workforcePools = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePool(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+location}/workforcePools"
   required=["(location)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkforcePool"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePool(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export workforcePools

# /resources/locations/resources/workforcePools/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/locations/resources/workforcePools/resources/subjects
type subjects = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export subjects

# /resources/locations/resources/workforcePools/resources/providers
type providers = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/providers"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkforcePoolProvider"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export providers

# /resources/locations/resources/workforcePools/resources/providers/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/locations/resources/workforcePools/resources/providers/resources/keys
type keys = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePoolProviderKey(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/keys"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkforcePoolProviderKey"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export keys

# /resources/locations/resources/workforcePools/resources/providers/resources/keys/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/locations/resources/workforcePools/resources/subjects/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/serviceAccounts
type serviceAccounts = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateServiceAccountRequest(cfg)
   response-type="iam.schemas.ServiceAccount"
   method="POST"
   url="https://iam.googleapis.com/v1/{+name}/serviceAccounts"
   required=["(name)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.ServiceAccount"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.PatchServiceAccountRequest(cfg)
   response-type="iam.schemas.ServiceAccount"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Empty"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export serviceAccounts

# /resources/projects/resources/roles
type roles = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateRoleRequest(cfg)
   response-type="iam.schemas.Role"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/roles"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.Role(cfg)
   response-type="iam.schemas.Role"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export roles

# /resources/projects/resources/locations/resources/workloadIdentityPools
type workloadIdentityPools = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPool(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/workloadIdentityPools"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkloadIdentityPool"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPool(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export workloadIdentityPools

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers
type providers = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/providers"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkloadIdentityPoolProvider"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export providers

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/keys
type keys = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPoolProviderKey(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/keys"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkloadIdentityPoolProviderKey"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export keys

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/keys/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/managedIdentities/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/managedIdentities/resources/workloadSources/resources/operations
type operations = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export operations

# /resources/projects/resources/serviceAccounts/resources/keys
type keys = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateServiceAccountKeyRequest(cfg)
   response-type="iam.schemas.ServiceAccountKey"
   method="POST"
   url="https://iam.googleapis.com/v1/{+name}/keys"
   required=["(name)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.ServiceAccountKey"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Empty"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export keys

# /resources/organizations/resources/roles
type roles = {
 identity(cfg) = cfg
 origin(cfg)= cfg <- {
  driver="gcp"
 }
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateRoleRequest(cfg)
   response-type="iam.schemas.Role"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/roles"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.Role(cfg)
   response-type="iam.schemas.Role"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export roles

