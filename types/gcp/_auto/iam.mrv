#lang marv
## AUTO-GENERATED FILE - DO NOT EDIT!

import types/gcp/_auto/iam-schema
API-ID="iam"
# /resources/roles
type resources_roles = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/roles"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_roles

# /resources/iamPolicies
type resources_iamPolicies = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/iamPolicies"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_iamPolicies

# /resources/permissions
type resources_permissions = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/permissions"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_permissions

# /resources/locations/resources/workforcePools
type resources_locations_resources_workforcePools = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePool(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+location}/workforcePools"
   required=["(location)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkforcePool"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePool(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_locations_resources_workforcePools

# /resources/locations/resources/workforcePools/resources/operations
type resources_locations_resources_workforcePools_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_locations_resources_workforcePools_resources_operations

# /resources/locations/resources/workforcePools/resources/subjects
type resources_locations_resources_workforcePools_resources_subjects = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/subjects"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_locations_resources_workforcePools_resources_subjects

# /resources/locations/resources/workforcePools/resources/providers
type resources_locations_resources_workforcePools_resources_providers = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/providers"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/providers"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkforcePoolProvider"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_locations_resources_workforcePools_resources_providers

# /resources/locations/resources/workforcePools/resources/providers/resources/operations
type resources_locations_resources_workforcePools_resources_providers_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/providers/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_locations_resources_workforcePools_resources_providers_resources_operations

# /resources/locations/resources/workforcePools/resources/providers/resources/keys
type resources_locations_resources_workforcePools_resources_providers_resources_keys = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/providers/resources/keys"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkforcePoolProviderKey(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/keys"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkforcePoolProviderKey"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_locations_resources_workforcePools_resources_providers_resources_keys

# /resources/locations/resources/workforcePools/resources/providers/resources/keys/resources/operations
type resources_locations_resources_workforcePools_resources_providers_resources_keys_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/providers/resources/keys/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_locations_resources_workforcePools_resources_providers_resources_keys_resources_operations

# /resources/locations/resources/workforcePools/resources/subjects/resources/operations
type resources_locations_resources_workforcePools_resources_subjects_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/locations/resources/workforcePools/resources/subjects/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_locations_resources_workforcePools_resources_subjects_resources_operations

# /resources/projects/resources/serviceAccounts
type resources_projects_resources_serviceAccounts = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/serviceAccounts"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateServiceAccountRequest(cfg)
   response-type="iam.schemas.ServiceAccount"
   method="POST"
   url="https://iam.googleapis.com/v1/{+name}/serviceAccounts"
   required=["(name)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.ServiceAccount"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.PatchServiceAccountRequest(cfg)
   response-type="iam.schemas.ServiceAccount"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Empty"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_serviceAccounts

# /resources/projects/resources/roles
type resources_projects_resources_roles = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/roles"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateRoleRequest(cfg)
   response-type="iam.schemas.Role"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/roles"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.Role(cfg)
   response-type="iam.schemas.Role"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_roles

# /resources/projects/resources/locations/resources/workloadIdentityPools
type resources_projects_resources_locations_resources_workloadIdentityPools = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPool(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/workloadIdentityPools"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkloadIdentityPool"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPool(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/operations
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/providers"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkloadIdentityPoolProvider"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPoolProvider(cfg)
   response-type="iam.schemas.Operation"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/operations
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers_resources_operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/keys
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers_resources_keys = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/keys"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.WorkloadIdentityPoolProviderKey(cfg)
   response-type="iam.schemas.Operation"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/keys"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.WorkloadIdentityPoolProviderKey"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers_resources_keys

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/keys/resources/operations
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers_resources_keys_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/providers/resources/keys/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_providers_resources_keys_resources_operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/operations
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_namespaces_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_namespaces_resources_operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/managedIdentities/resources/operations
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_namespaces_resources_managedIdentities_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/managedIdentities/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_namespaces_resources_managedIdentities_resources_operations

# /resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/managedIdentities/resources/workloadSources/resources/operations
type resources_projects_resources_locations_resources_workloadIdentityPools_resources_namespaces_resources_managedIdentities_resources_workloadSources_resources_operations = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/locations/resources/workloadIdentityPools/resources/namespaces/resources/managedIdentities/resources/workloadSources/resources/operations"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Operation"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   
  }
 }
}
export resources_projects_resources_locations_resources_workloadIdentityPools_resources_namespaces_resources_managedIdentities_resources_workloadSources_resources_operations

# /resources/projects/resources/serviceAccounts/resources/keys
type resources_projects_resources_serviceAccounts_resources_keys = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/projects/resources/serviceAccounts/resources/keys"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateServiceAccountKeyRequest(cfg)
   response-type="iam.schemas.ServiceAccountKey"
   method="POST"
   url="https://iam.googleapis.com/v1/{+name}/keys"
   required=["(name)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.ServiceAccountKey"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Empty"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_projects_resources_serviceAccounts_resources_keys

# /resources/organizations/resources/roles
type resources_organizations_resources_roles = {
 origin(cfg)= {
  driver="gcp"
  type="gcp:iam:/resources/organizations/resources/roles"
 }
 identity(cfg) = cfg
 create(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.CreateRoleRequest(cfg)
   response-type="iam.schemas.Role"
   method="POST"
   url="https://iam.googleapis.com/v1/{+parent}/roles"
   required=["(parent)"]
  }
 }
 read(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="GET"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 update(cfg)={
  config=cfg
  api={
   api-id=API-ID
   request-body=schemas.Role(cfg)
   response-type="iam.schemas.Role"
   method="PATCH"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
 delete(cfg)={
  config=cfg
  api={
   api-id=API-ID
   response-type="iam.schemas.Role"
   method="DELETE"
   url="https://iam.googleapis.com/v1/{+name}"
   required=["(name)"]
  }
 }
}
export resources_organizations_resources_roles

