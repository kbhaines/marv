#lang marv

# WARNING: This shim file is incomplete. You need to define an 'API' type
# relevant to the API being imported, and then remove this warning.

import types/gcp/_auto/sql as _auto

# Modify this example per API

delete-self(state, oapi) = {
  api= oapi.api <- { url=state.selfLink },
  config = {}
}

type API<T> = {
 post-create(original, state) = 
  state <- { project=original.project,  region=original.region }
 post-read(o, cfg) = post-create(o, cfg)
 post-update(original, cfg)=post-create(original, cfg)
 #delete(state) = delete-self(state, T.delete(state))
 * = T.*
}

type database=API<_auto:databases>
export database

type tier=API<_auto:tiers>
export tier

type instance=API<_auto:instances>
export instance

type backupRun=API<_auto:backupRuns>
export backupRun

type connect=API<_auto:connect>
export connect

type sslCert=API<_auto:sslCerts>
export sslCert

# TODO - GCP replies with wrong targetLink following user-create. The reply
# needs to be intercepted in the driver processsing, in order to fix this
type _user=API<_auto:users>
type user = {
   post-create(orig, state)= orig
   delete(cfg)={
    config=cfg,
    api={
     api-id="sql",
     response-type="sql.schemas.Operation",
     method="DELETE",
     url="https://sqladmin.googleapis.com/v1/projects/{project}/instances/{instance}/users?name={name}",
     required=["(project instance)"]
    }
 }
  * = _user.*
}
export user

type flag=API<_auto:flags>
export flag