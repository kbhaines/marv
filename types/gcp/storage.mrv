#lang marv

# WARNING: This shim file is incomplete. You need to define an 'API' type
# relevant to the API being imported, and then remove this warning.

import types/gcp/_auto/storage as _auto
import types/gcp/base

# Modify this example per API

delete-self(state, oapi) = {
  api= oapi.api <- { url=state.selfLink }
  config = {}
}

type API<T> = {
  identity(cfg) = cfg <- { name=imm: cfg.name }
  post-create(original, state) = state <- { project=original.project,  region=original.region }
  post-read(local, remote) = post-create(local, remote)
  post-update(original, state)=post-create(original, state)
  delete(state) = delete-self(state, T.delete(state))
  * = T.*
}
type notification=API<_auto:resources_notifications>
export notification

type objectAccessControl=API<_auto:resources_objectAccessControls>
export objectAccessControl

type bucketAccessControl=API<_auto:resources_bucketAccessControls>
export bucketAccessControl

type bucket=API<_auto:resources_buckets>
export bucket

type channel=API<_auto:resources_channels>
export channel

type defaultObjectAccessControl=API<_auto:resources_defaultObjectAccessControls>
export defaultObjectAccessControl

type object=API<_auto:resources_objects>
export object

type serviceAccount=API<_auto:resources_projects_resources_serviceAccount>
export serviceAccount

type hmacKey=API<_auto:resources_projects_resources_hmacKeys>
export hmacKey