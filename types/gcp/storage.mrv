#lang marv

# WARNING: This shim file is incomplete. You need to define an 'API' type
# relevant to the API being imported, and then remove this warning.

import types/gcp/_auto/storage as _auto
import types/gcp/base

# Modify this example per API

type API<T> = {
  origin(c) = T.origin(c)
  identity(c) = default-resource.identity(c)
  post-create(original, state) = state <- { project=original.project,  region=original.region }
  post-read(original, state) = post-create(original, state)
  post-update(original, state)=post-create(original, state)
  delete(state) = T.delete(state << [name])
  * = default-resource.*
  * = T.*
}

type notification=API<_auto:notifications>
export notification

type objectAccessControl=API<_auto:objectAccessControls>
export objectAccessControl

type bucketAccessControl=API<_auto:bucketAccessControls>
export bucketAccessControl

type bucket=API<_auto:buckets>
export bucket

type channel=API<_auto:channels>
export channel

type defaultObjectAccessControl=API<_auto:defaultObjectAccessControls>
export defaultObjectAccessControl

type object=API<_auto:objects>
export object

type serviceAccount=API<_auto:serviceAccount>
export serviceAccount

type hmacKey=API<_auto:hmacKeys>
export hmacKey