#lang racket/base

(require racket/contract)
(require marv/drivers/gcp/crud)
(require marv/log)

(provide compute-type-map ct-register-type)

; Returns id of resource operation e.g. compute.instance.get
(define (compute-type-map type) (crud-for-type (type-map) type))

(define/contract (ct-register-type type crud)
  (symbol? crud? . -> . void)
  (log-marv-info "Registering compute type: ~a ~a" type crud)
  (type-map (hash-set (type-map) type crud)))

; TODO - find way to auto-generate this (heuristics?)
(define base-type-map
  #hasheq(
   (compute.acceleratorType . compute.acceleratorTypes)
   (compute.address . compute.addresses)
   (compute.autoscaler . compute.autoscalers)
   (compute.backendBucket . compute.backendBuckets)
   (compute.backendService . compute.backendServices)
   (compute.diskType . compute.diskTypes)
   (compute.disk . compute.disks)
   (compute.externalVpnGateway . compute.externalVpnGateways)
   (compute.firewallPolicy . compute.firewallPolicies)
   (compute.firewall . compute.firewalls)
   (compute.forwardingRule . compute.forwardingRules)
   (compute.globalAddress . compute.globalAddresses)
   (compute.globalForwardingRule . compute.globalForwardingRules)
   (compute.globalNetworkEndpointGroup . compute.globalNetworkEndpointGroups)
   (compute.globalOperation . compute.globalOperations)
   (compute.globalOrganizationOperation . compute.globalOrganizationOperations)
   (compute.globalPublicDelegatedPrefix . compute.globalPublicDelegatedPrefixes)
   (compute.healthCheck . compute.healthChecks)
   (compute.httpHealthCheck . compute.httpHealthChecks)
   (compute.httpsHealthCheck . compute.httpsHealthChecks)
   (compute.imageFamilyView . compute.imageFamilyViews)
   (compute.image . compute.images)
   (compute.instanceGroupManager . compute.instanceGroupManagers)
   (compute.instanceGroup . compute.instanceGroups)
   (compute.instanceTemplate . compute.instanceTemplates)
   (compute.instance . compute.instances)
   (compute.interconnectAttachment . compute.interconnectAttachments)
   (compute.interconnectLocation . compute.interconnectLocations)
   (compute.interconnect . compute.interconnects)
   (compute.licenseCode . compute.licenseCodes)
   (compute.license . compute.licenses)
   (compute.machineImage . compute.machineImages)
   (compute.machineType . compute.machineTypes)
   (compute.networkAttachment . compute.networkAttachments)
   (compute.networkEdgeSecurityService . compute.networkEdgeSecurityServices)
   (compute.networkEndpointGroup . compute.networkEndpointGroups)
   (compute.networkFirewallPolicy . compute.networkFirewallPolicies)
   (compute.network . compute.networks)
   (compute.nodeGroup . compute.nodeGroups)
   (compute.nodeTemplate . compute.nodeTemplates)
   (compute.nodeType . compute.nodeTypes)
   (compute.packetMirroring . compute.packetMirrorings)
   (compute.project . compute.projects)
   (compute.publicAdvertisedPrefixe . compute.publicAdvertisedPrefixes)
   (compute.publicDelegatedPrefixe . compute.publicDelegatedPrefixes)
   (compute.regionAutoscaler . compute.regionAutoscalers)
   (compute.regionBackendService . compute.regionBackendServices)
   (compute.regionCommitment . compute.regionCommitments)
   (compute.regionDiskType . compute.regionDiskTypes)
   (compute.regionDisk . compute.regionDisks)
   (compute.regionHealthCheckService . compute.regionHealthCheckServices)
   (compute.regionHealthCheck . compute.regionHealthChecks)
   (compute.regionInstanceGroupManager . compute.regionInstanceGroupManagers)
   (compute.regionInstanceGroup . compute.regionInstanceGroups)
   (compute.regionInstanceTemplate . compute.regionInstanceTemplates)
   (compute.regionInstance . compute.regionInstances)
   (compute.regionNetworkEndpointGroup . compute.regionNetworkEndpointGroups)
   (compute.regionNetworkFirewallPolicy . compute.regionNetworkFirewallPolicies)
   (compute.regionNotificationEndpoint . compute.regionNotificationEndpoints)
   (compute.regionOperation . compute.regionOperations)
   (compute.regionSecurityPolicy . compute.regionSecurityPolicies)
   (compute.regionSslCertificate . compute.regionSslCertificates)
   (compute.regionSslPolicy . compute.regionSslPolicies)
   (compute.regionTargetHttpProxy . compute.regionTargetHttpProxies)
   (compute.regionTargetHttpsProxy . compute.regionTargetHttpsProxies)
   (compute.regionTargetTcpProxy . compute.regionTargetTcpProxies)
   (compute.regionUrlMap . compute.regionUrlMaps)
   (compute.region . compute.regions)
   (compute.reservation . compute.reservations)
   (compute.resourcePolicy . compute.resourcePolicies)
   (compute.router . compute.routers)
   (compute.route . compute.routes)
   (compute.securityPolicy . compute.securityPolicies)
   (compute.serviceAttachment . compute.serviceAttachments)
   (compute.snapshot . compute.snapshots)
   (compute.sslCertificate . compute.sslCertificates)
   (compute.sslPolicy . compute.sslPolicies)
   (compute.subnetwork . compute.subnetworks)
   (compute.targetGrpcProxy . compute.targetGrpcProxies)
   (compute.targetHttpProxy . compute.targetHttpProxies)
   (compute.targetHttpsProxy . compute.targetHttpsProxies)
   (compute.targetInstance . compute.targetInstances)
   (compute.targetPool . compute.targetPools)
   (compute.targetSslProxy . compute.targetSslProxies)
   (compute.targetTcpProxy . compute.targetTcpProxies)
   (compute.targetVpnGateway . compute.targetVpnGateways)
   (compute.urlMap . compute.urlMaps)
   (compute.vpnGateway . compute.vpnGateways)
   (compute.vpnTunnel . compute.vpnTunnels)
   (compute.zoneOperation . compute.zoneOperations)
   (compute.zone . compute.zones)))

(define type-map (make-parameter base-type-map))